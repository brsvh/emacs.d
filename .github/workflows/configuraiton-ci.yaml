name: CI

on:
  push:
    paths:
      - 'org/**.org'
  pull_request:
    paths:
      - 'org/**.org'
  workflow_call:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Nix
        uses: nixbuild/nix-quick-install-action@v26
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Nix Store
        uses: nix-community/cache-nix-action@v5
        with:
          primary-key: ${{ runner.os }}-nix-${{ hashFiles('**/*.nix') }}
          restore-prefixes-first-match: ${{ runner.os }}-nix-
          purge: true
          purge-created: 604800

      - name: Update dependent packages
        run: nix run .#lock --impure

      - name: Check flake
        run: nix flake check

      - name: Check dependent packages
        run: nix build .#emacsD.depsCheck --print-build-logs

      - name: Check changed files
        uses: tj-actions/verify-changed-files@v17
        id: check-changed-files
        with:
          files: 'elpa/**'

      - name: Import GPG key
        if: steps.check-changed-files.outputs.files_changed == 'true'
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}

      - name: Lock updates of dependent packages
        if: steps.check-changed-files.outputs.files_changed == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(elpa): bump version"
          commit_author: Burgess Chang <bsc@brsvh.org>
          commit_user_name: Burgess Chang
          commit_user_email: bsc@brsvh.org
          commit_options: '--gpg-sign=7B740DB9F2AC6D3B226BC53078D74502D92E0218'
          file_pattern: 'elpa/**'

  build:
    name: Build
    needs: [check]
    strategy:
      matrix:
        package: ['emacsD', 'emacsD-nogui', 'emacsD-pgtk']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Nix
        uses: nixbuild/nix-quick-install-action@v26
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Nix Store
        uses: nix-community/cache-nix-action@v5
        with:
          primary-key: ${{ runner.os }}-build-${{ hashFiles('**/*.nix') }}
          restore-prefixes-first-match: ${{ runner.os }}-build-
          purge: true
          purge-created: 604800

      - name: Build
        run: nix build .#${{ matrix.package }} --print-build-logs

      - name: Setup cachix
        if: github.ref == 'refs/heads/main'
        run: nix profile install nixpkgs#cachix

      - name: Publish
        if: github.ref == 'refs/heads/main'
        env:
          CACHIX_AUTH_TOKEN: "${{ secrets.CACHIX_AUTH_TOKEN }}"
        run: cachix push brsvh ./result

      - name: Export configuration to Markdown
        id: ox-md
        if: |
          github.ref == 'refs/heads/main' &&
          matrix.package == 'emacsD-nogui'
        run: |
          for org in org/**.org
          do
             nix run .#batch -- $org --funcall org-md-export-to-markdown
          done

      - name: Upload Markdown artifacts
        if: steps.ox-md.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: docs-markdown
          path: docs/**.md

  publish-md:
    name: Publish Markdown
    needs: [check, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Download Markdown artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs-markdown
          path: docs/

      - name: Check changed Markdown
        uses: tj-actions/verify-changed-files@v17
        id: check-changed-md
        with:
          files: 'docs/**.md'

      - name: Import GPG key
        if: steps.check-changed-md.outputs.files_changed == 'true'
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}

      - name: Publish Markdown
        if: steps.check-changed-md.outputs.files_changed == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "docs: auto update"
          commit_author: Burgess Chang <bsc@brsvh.org>
          commit_user_name: Burgess Chang
          commit_user_email: bsc@brsvh.org
          commit_options: '--gpg-sign=7B740DB9F2AC6D3B226BC53078D74502D92E0218'
          file_pattern: 'docs/**.md'
