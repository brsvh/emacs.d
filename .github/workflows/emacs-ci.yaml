name: Emacs/Twist - CI

on:
  push:
    paths:
      - 'flake.*'
  pull_request:
    paths:
      - 'flake.*'
  workflow_call:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Nix
        uses: nixbuild/nix-quick-install-action@v26
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Nix Store
        uses: nix-community/cache-nix-action@v5
        with:
          primary-key: ${{ runner.os }}-nix-${{ hashFiles('**/*.nix') }}
          restore-prefixes-first-match: ${{ runner.os }}-nix-
          purge: true
          purge-created: 604800

      - name: Check flake
        run: nix flake check

  build:
    name: Build
    needs: [check]
    strategy:
      matrix:
        package: ['emacsD', 'emacsD-nogui', 'emacsD-pgtk']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Nix
        uses: nixbuild/nix-quick-install-action@v26
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Nix Store
        uses: nix-community/cache-nix-action@v5
        with:
          primary-key: ${{ runner.os }}-build-${{ hashFiles('**/*.nix') }}
          restore-prefixes-first-match: ${{ runner.os }}-build-
          purge: true
          purge-created: 604800
          
      - name: Build
        run: nix build .#${{ matrix.package }} --print-build-logs

      - name: Setup cachix
        if: github.ref == 'refs/heads/main'
        run: nix profile install nixpkgs#cachix

      - name: Publish
        if: github.ref == 'refs/heads/main'
        env:
          CACHIX_AUTH_TOKEN: "${{ secrets.CACHIX_AUTH_TOKEN }}"
        run: cachix push brsvh ./result
